[{"D:\\Laragon\\www\\kb-widgets\\src\\index.js":"1","D:\\Laragon\\www\\kb-widgets\\src\\components\\ExchangeSingle.js":"2","D:\\Laragon\\www\\kb-widgets\\src\\components\\Exchange.js":"3","D:\\Laragon\\www\\kb-widgets\\src\\App-exchange.js":"4","D:\\Laragon\\www\\kb-widgets\\src\\App-calculator.js":"5","D:\\Laragon\\www\\kb-widgets\\src\\components\\Calculator.js":"6","D:\\Laragon\\www\\kb-widgets\\src\\components\\SavingCalculator.js":"7","D:\\Laragon\\www\\kb-widgets\\src\\components\\loanCalculator\\ConsumerLoan.js":"8","D:\\Laragon\\www\\kb-widgets\\src\\components\\common\\ProductCard.js":"9"},{"size":646,"mtime":1661003014186,"results":"10","hashOfConfig":"11"},{"size":3014,"mtime":1660982380248,"results":"12","hashOfConfig":"11"},{"size":18063,"mtime":1661001477116,"results":"13","hashOfConfig":"11"},{"size":204,"mtime":1660993733282,"results":"14","hashOfConfig":"11"},{"size":214,"mtime":1661002719161,"results":"15","hashOfConfig":"11"},{"size":1654,"mtime":1661002975899,"results":"16","hashOfConfig":"11"},{"size":7973,"mtime":1660899165902,"results":"17","hashOfConfig":"11"},{"size":10660,"mtime":1661003164876,"results":"18","hashOfConfig":"11"},{"size":6619,"mtime":1661003355710,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5nm6u5",{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Laragon\\www\\kb-widgets\\src\\index.js",[],"D:\\Laragon\\www\\kb-widgets\\src\\components\\ExchangeSingle.js",["39","40","41"],"D:\\Laragon\\www\\kb-widgets\\src\\components\\Exchange.js",["42"],"import React, {useState, useEffect} from 'react';\r\nimport { Chart } from 'primereact/chart'\r\nimport { Button } from 'primereact/button'\r\nimport { DataTable } from 'primereact/datatable'\r\nimport { Column } from 'primereact/column'\r\nimport { ColumnGroup } from 'primereact/columngroup'\r\nimport { Row } from 'primereact/row'\r\n\r\nimport { Calendar } from 'primereact/calendar'\r\nimport { Dropdown } from 'primereact/dropdown'\r\nimport { InputNumber } from 'primereact/inputnumber'\r\nimport 'primeicons/primeicons.css'\r\nimport 'primereact/resources/themes/lara-light-indigo/theme.css'\r\nimport 'primereact/resources/primereact.css'\r\nimport 'primeflex/primeflex.css'\r\n\r\n\r\nimport axiosInstance from './../index';\r\n// import moment from \"moment\";\r\n\r\nconst MARKET_STACK_QUOTE_URL = `${process.env.REACT_APP_KB_API_BASE_URL}/api/back/rates`;\r\nconst assets = `${process.env.REACT_APP_KB_ASSETS_URL}`;\r\n\r\nfunction Exchange(props) {\r\n\r\n    const [calender, setCalendar] = useState(Date())\r\n    const [selectType, setSelectType] = useState(0)\r\n    const [data, setData] = useState([])\r\n    const [value1, setValue1] = useState()\r\n    const [value2, setValue2] = useState()\r\n    const [basicData] = useState({\r\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\r\n        datasets: [\r\n            {\r\n                label: 'First Dataset',\r\n                data: [65, 59, 80, 81, 56, 55, 40],\r\n                fill: false,\r\n                borderColor: '#9F824E',\r\n                tension: 0\r\n            },\r\n            {\r\n                label: 'Second Dataset',\r\n                data: [100, 48, 40, 19, 86, 27, 90],\r\n                fill: false,\r\n                borderColor: '#024E31',\r\n                tension: 0\r\n            }\r\n        ]\r\n    })\r\n    const [selectedCountry1, setSelectedCountry1] = useState()\r\n    const [selectedCountry2, setSelectedCountry2] = useState()\r\n    const [selectedExchange2, setSelectedExchange2] = useState()\r\n\r\n    useEffect(() => {\r\n        axiosInstance.get(MARKET_STACK_QUOTE_URL, {  params: {\r\n                date: calender,\r\n            }}).then((result) => {\r\n            console.log(result)\r\n            if (!result.data) {\r\n                return;\r\n            }\r\n            else {\r\n                setData(result.data)\r\n            }\r\n        });\r\n    },[calender]);\r\n    useEffect(() => {\r\n        setSelectedCountry1(data[0])\r\n        setSelectedCountry2(data[data.length - 1])\r\n        setSelectedExchange2(data[0])\r\n    }, [data])\r\n    const getLightTheme = () => {\r\n        let basicOptions = {\r\n            maintainAspectRatio: false,\r\n            aspectRatio: 0.6,\r\n            plugins: {\r\n                legend: {\r\n                    labels: {\r\n                        color: '#495057'\r\n                    }\r\n                }\r\n            }\r\n            //   scales: {\r\n            //     x: {\r\n            //       ticks: {\r\n            //         color: '#495057'\r\n            //         // borderColor: '#ccc'\r\n            //       },\r\n            //       grid: {\r\n            //         color: '#ebedef'\r\n            //       }\r\n            //     },\r\n            //     y: {\r\n            //       ticks: {\r\n            //         color: '#495057'\r\n            //       },\r\n            //       grid: {\r\n            //         color: '#ebedef'\r\n            //       }\r\n            //     }\r\n            //   }\r\n        }\r\n\r\n        return {\r\n            basicOptions\r\n        }\r\n    }\r\n    const { basicOptions } = getLightTheme()\r\n    const type = [\r\n        'Бэлэн авах',\r\n        'Бэлэн бус авах',\r\n        'Бэлэн зарах',\r\n        'Бэлэн бус зарах'\r\n    ]\r\n\r\n    let headerGroup = (\r\n        <ColumnGroup>\r\n            <Row>\r\n                {/*<Column header={moment(calendar).format('YYYY-MM-DD')} colSpan={3} />*/}\r\n                <Column header=\"2022.02.03\" colSpan={3} />\r\n                <Column header='Бэлэн' colSpan={2} />\r\n                <Column header='Бэлэн бус' colSpan={2} />\r\n            </Row>\r\n            <Row>\r\n                <Column header='Валют' />\r\n                <Column header='Валютын нэр' />\r\n                <Column header='Албан ханш' />\r\n                <Column header='авах' />\r\n                <Column header='зарах' />\r\n                <Column header='авах' />\r\n                <Column header='зарах' />\r\n            </Row>\r\n        </ColumnGroup>\r\n    )\r\n    let headerMobileGroup = (\r\n        <ColumnGroup>\r\n            <Row>\r\n                <Column header='Валют' />\r\n                <Column header='Албан ханш' />\r\n                <Column header='Бэлэн' />\r\n                <Column header='Бэлэн бус' />\r\n            </Row>\r\n        </ColumnGroup>\r\n    )\r\n\r\n    const Currency = (rowData) => {\r\n        return (\r\n            <div className='exchangeCalculator-currency'>\r\n                <div\r\n                    className='exchangeCalculator-currency-flag'\r\n                    style={{\r\n                        // backgroundImage: `url(${assets}${rowData.flag})`,\r\n\r\n                        backgroundImage: rowData.flag\r\n                            ? 'url(' + assets + rowData.flag + ')'\r\n                            : `url(/assets/images/flags/us.png)`\r\n                    }}\r\n                />\r\n                <h1 className='exchangeCalculator-currency-text'>{rowData.currency}</h1>\r\n            </div>\r\n        )\r\n    }\r\n    const MobileCurrency = (rowData) => {\r\n        return (\r\n            <div className='exchangeCalculator-currencyMobile'>\r\n                <div\r\n                    className='exchangeCalculator-currencyMobile-flag'\r\n                    style={{\r\n                        // backgroundImage: `url(${assets}${rowData.flag})`,\r\n\r\n                        backgroundImage: rowData.flag\r\n                            ? 'url(' + assets + rowData.flag + ')'\r\n                            : `url(/assets/images/flags/us.png)`\r\n                    }}\r\n                />\r\n                <div className='exchangeCalculator-currencyMobile-description'>\r\n                    <h1 className='exchangeCalculator-currencyMobile-text'>\r\n                        {rowData.currency}\r\n                    </h1>\r\n                    <p className='exchangeCalculator-currencyMobile-shortName'>\r\n                        {rowData.shortName}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const Rate = (rowData) => {\r\n        return (\r\n            <div className='exchangeCalculator-rate'>\r\n                <div className='exchangeCalculator-rate-header'>\r\n                    <p className='exchangeCalculator-table-title'>Авах</p>\r\n                    <p className='exchangeCalculator-table-title'>Зарах</p>\r\n                </div>\r\n                <div className='exchangeCalculator-rate-description'>\r\n                    <p className='exchangeCalculator-table-midRate'>\r\n                        {currencyFormat(rowData.buyRate)}\r\n                    </p>\r\n                    <p className='exchangeCalculator-table-midRate'>\r\n                        {currencyFormat(rowData.sellRate)}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    const midRateTemplate = (rowData) => {\r\n        return currencyFormat(rowData.midRate)\r\n    }\r\n    const sellRateTemplate = (rowData) => {\r\n        return currencyFormat(rowData.sellRate)\r\n    }\r\n    const buyRateTemplate = (rowData) => {\r\n        return currencyFormat(rowData.buyRate)\r\n    }\r\n    const cashBuyRateTemplate = (rowData) => {\r\n        return currencyFormat(rowData.cashBuyRate)\r\n    }\r\n    const cashSellRateTemplate = (rowData) => {\r\n        return currencyFormat(rowData.cashSellRate)\r\n    }\r\n\r\n    const rowClass = (data) => {\r\n        return data.number % 2 === 1\r\n            ? 'exchangeCalculator-table-backgroundWhite'\r\n            : 'exchangeCalculator-table-backgroundGrey'\r\n    }\r\n    useEffect(() => {\r\n        selectedCountry1 && selectedCountry2 && changeValue(value1)\r\n    }, [selectType, selectedCountry2, selectedCountry1])\r\n\r\n    function currencyFormat(num) {\r\n        return parseFloat(num)\r\n            .toFixed(2)\r\n            .replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\r\n    }\r\n    const changeValue = (value) => {\r\n        let check\r\n        switch (selectType) {\r\n            case 0:\r\n                check = selectedCountry1.buyRate / selectedCountry2.buyRate\r\n                return setValue2(value * check)\r\n            case 1:\r\n                check = selectedCountry1.sellRate / selectedCountry2.sellRate\r\n                return setValue2(value * check)\r\n            case 2:\r\n                check = selectedCountry1.cashBuyRate / selectedCountry2.cashBuyRate\r\n                return setValue2(value * check)\r\n            case 3:\r\n                check = selectedCountry1.cashSellRate / selectedCountry2.cashSellRate\r\n                return setValue2(value * check)\r\n            default: return setValue2(0)\r\n        }\r\n    }\r\n    const changeRate = () => {\r\n        let temp1 = selectedCountry1\r\n        let temp2 = selectedCountry2\r\n        setSelectedCountry1(temp2)\r\n        setSelectedCountry2(temp1)\r\n    }\r\n\r\n    return (\r\n        <div className='exchangeCalculator'>\r\n            <div className='exchangeCalculator-header'>\r\n                <h2 className='exchangeCalculator-title'>\r\n                    Ханшийн Мэдээ\r\n                </h2>\r\n\r\n                <Calendar\r\n                    className='exchangeCalculator-header-calendar'\r\n                    value={calender ? calender : Date()}\r\n                    onChange={(e) => {\r\n                        setCalendar(e.value)\r\n                    }}\r\n                    showIcon\r\n                    dateFormat='yy.mm.dd'\r\n                ></Calendar>\r\n            </div>\r\n            <div className='exchangeCalculator-table-web'>\r\n                <DataTable\r\n                    value={data}\r\n                    headerColumnGroup={headerGroup}\r\n                    responsiveLayout='scroll'\r\n                    className='exchangeCalculator-table'\r\n                    rowClassName={rowClass}\r\n                >\r\n                    <Column field='currency' body={Currency} />\r\n                    <Column field='shortName' />\r\n                    <Column field='midRate' body={midRateTemplate} />\r\n                    <Column field='buyRate' body={buyRateTemplate} />\r\n                    <Column field='sellRate' body={sellRateTemplate} />\r\n                    <Column field='cashBuyRate' body={cashBuyRateTemplate} />\r\n                    <Column field='cashSellRate' body={cashSellRateTemplate} />\r\n                </DataTable>\r\n            </div>\r\n            <div className='exchangeCalculator-table-mobile'>\r\n                <DataTable\r\n                    value={data}\r\n                    headerColumnGroup={headerMobileGroup}\r\n                    responsiveLayout='scroll'\r\n                    className='exchangeCalculator-table'\r\n                    stripedRows\r\n                    rowClassName={rowClass}\r\n                >\r\n                    <Column field='currency' body={MobileCurrency} />\r\n                    <Column\r\n                        field='midRate'\r\n                        className='exchangeCalculator-table-midRate'\r\n                        body={midRateTemplate}\r\n                    />\r\n                    <Column body={Rate} />\r\n                    <Column body={Rate} />\r\n                </DataTable>\r\n            </div>\r\n            <p className='exchangeCalculator-description'>\r\n                Энэхүү вэб дээрх ханш нь зөвхөн мэдээллийн зорилготой бөгөөд валют арилжааны гүйлгээ хийхэд, салбар болон интернет банкны тухайн үеийн ханш мөрдөгдөхийг анхаарна уу. Валютын ханш болон валют арилжааны хэлцэлтэй холбоотой асуудлаар дараах хаягаар холбогдоно уу.\r\n            </p>\r\n            <p className='exchangeCalculator-email'>\r\n               Утас: 75101111 И-мэйл: forex@khanbank.com\r\n            </p>\r\n            <div className='exchangeCalculator-container'>\r\n                <div className='grid grid-nogutter'>\r\n                    <h2 className='col-12 sm:col-5 exchangeCalculator-title'>\r\n                        Ханш хөрвүүлэгч\r\n                    </h2>\r\n                    <div className='col-12 sm:col-7 grid grid-nogutter '>\r\n                        {type.map((data, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className='col-6 sm:col-3  flex align-items-center justify-content-left exchangeCalculator-typeContainer'\r\n                            >\r\n                                <div\r\n                                    className={\r\n                                        index === selectType\r\n                                            ? ' exchangeCalculator-typeCheck exchangeCalculator-typeCheck-active'\r\n                                            : 'exchangeCalculator-typeCheck '\r\n                                    }\r\n                                    onClick={() => setSelectType(index)}\r\n                                />\r\n                                <p className='exchangeCalculator-type'>{data}</p>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className='grid grid-nogutter exchangeCalculator-transaction'>\r\n                    <div className='col exchangeCalculator-input'>\r\n                        <InputNumber\r\n                            value={value1}\r\n                            onChange={(e) => {\r\n                                setValue1(e.value)\r\n                                changeValue(e.value)\r\n                                // setValue2(e.value * selectedCountry1.buyRate)\r\n                                // console.log(selectType)\r\n                            }}\r\n                            format='0.00'\r\n                            placeholder='0.00'\r\n                            // type={number}\r\n                            className='exchangeCalculator-input-value'\r\n                        />\r\n                        <div className='exchangeCalculator-input-line' />\r\n                        <Dropdown\r\n                            className='exchangeCalculator-input-currency'\r\n                            value={selectedCountry1}\r\n                            options={data}\r\n                            onChange={(e) => {\r\n                                setSelectedCountry1(e.value)\r\n                            }}\r\n                            optionLabel='currency'\r\n                        />\r\n                    </div>\r\n                    <div className='col-12 sm:col-1 flex justify-content-center align-items-center'>\r\n                        <div\r\n                            className='exchangeCalculator-arrow'\r\n                            onClick={() => changeRate()}\r\n                        >\r\n                            <i className=\"pi pi-code\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col exchangeCalculator-input'>\r\n                        <InputNumber\r\n                            value={value2}\r\n                            disabled\r\n                            onChange={(e) => {\r\n                                setValue2(e.value)\r\n                                // setValue1(e.value * selectedCountry2.midRate)\r\n                            }}\r\n                            placeholder='0.00'\r\n                            className='exchangeCalculator-input-value'\r\n                        />\r\n                        <div className='exchangeCalculator-input-line' />\r\n                        <Dropdown\r\n                            className='exchangeCalculator-input-currency'\r\n                            value={selectedCountry2}\r\n                            options={data}\r\n                            onChange={(e) => {\r\n                                setSelectedCountry2(e.value)\r\n                            }}\r\n                            optionLabel='currency'\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='grid grid-nogutter exchangeCalculator-indicator'>\r\n                    <h2 className='col-8 exchangeCalculator-title'>\r\n                        Ханшийн үзүүлэлт\r\n                    </h2>\r\n                    <div className='col-4 flex justify-content-end'>\r\n                        <Dropdown\r\n                            className='exchangeCalculator-input-currency'\r\n                            value={selectedExchange2}\r\n                            options={data}\r\n                            onChange={(e) => {\r\n                                setSelectedExchange2(e.value)\r\n                            }}\r\n                            optionLabel='currency'\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='flex flex-row justify-content-between exchangeCalculator-onlineRate grid grid-nogutter'>\r\n                    <p className='exchangeCalculator-onlineRate-text col-12 sm:col-9'>\r\n                        Purchase foreign curency with Online and get your cash at a bank\r\n                        branch\r\n                    </p>\r\n                    <Button\r\n                        className='exchangeCalculator-onlineRate-button col-12 sm:col-3'\r\n                        label='Онлайн валют солилцох'\r\n                    />\r\n                </div>\r\n                <Chart type='line' data={basicData} options={basicOptions} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Exchange;\r\n","D:\\Laragon\\www\\kb-widgets\\src\\App-exchange.js",[],"D:\\Laragon\\www\\kb-widgets\\src\\App-calculator.js",[],"D:\\Laragon\\www\\kb-widgets\\src\\components\\Calculator.js",["43","44","45","46","47"],"D:\\Laragon\\www\\kb-widgets\\src\\components\\SavingCalculator.js",["48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74"],"D:\\Laragon\\www\\kb-widgets\\src\\components\\loanCalculator\\ConsumerLoan.js",["75","76","77","78","79"],"D:\\Laragon\\www\\kb-widgets\\src\\components\\common\\ProductCard.js",["80","81","82","83","84"],{"ruleId":"85","severity":1,"message":"86","line":53,"column":7,"nodeType":"87","endLine":53,"endColumn":9,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":66,"column":17,"nodeType":"91","endLine":72,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":70,"column":39,"nodeType":"94","messageId":"95","endLine":70,"endColumn":40},{"ruleId":"85","severity":1,"message":"96","line":228,"column":8,"nodeType":"87","endLine":228,"endColumn":56,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":1,"column":26,"nodeType":"100","messageId":"101","endLine":1,"endColumn":35},{"ruleId":"98","severity":1,"message":"102","line":5,"column":7,"nodeType":"100","messageId":"101","endLine":5,"endColumn":29},{"ruleId":"98","severity":1,"message":"103","line":6,"column":7,"nodeType":"100","messageId":"101","endLine":6,"endColumn":13},{"ruleId":"104","severity":1,"message":"105","line":36,"column":61,"nodeType":"94","messageId":"106","endLine":36,"endColumn":63},{"ruleId":"104","severity":1,"message":"105","line":39,"column":61,"nodeType":"94","messageId":"106","endLine":39,"endColumn":63},{"ruleId":"98","severity":1,"message":"107","line":2,"column":10,"nodeType":"100","messageId":"101","endLine":2,"endColumn":21},{"ruleId":"98","severity":1,"message":"108","line":3,"column":10,"nodeType":"100","messageId":"101","endLine":3,"endColumn":17},{"ruleId":"98","severity":1,"message":"109","line":3,"column":19,"nodeType":"100","messageId":"101","endLine":3,"endColumn":27},{"ruleId":"98","severity":1,"message":"110","line":4,"column":8,"nodeType":"100","messageId":"101","endLine":4,"endColumn":19},{"ruleId":"98","severity":1,"message":"111","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":21},{"ruleId":"98","severity":1,"message":"112","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":18},{"ruleId":"98","severity":1,"message":"113","line":11,"column":10,"nodeType":"100","messageId":"101","endLine":11,"endColumn":15},{"ruleId":"98","severity":1,"message":"114","line":21,"column":11,"nodeType":"100","messageId":"101","endLine":21,"endColumn":19},{"ruleId":"98","severity":1,"message":"115","line":21,"column":21,"nodeType":"100","messageId":"101","endLine":21,"endColumn":26},{"ruleId":"98","severity":1,"message":"116","line":26,"column":28,"nodeType":"100","messageId":"101","endLine":26,"endColumn":47},{"ruleId":"98","severity":1,"message":"117","line":32,"column":10,"nodeType":"100","messageId":"101","endLine":32,"endColumn":21},{"ruleId":"98","severity":1,"message":"118","line":33,"column":10,"nodeType":"100","messageId":"101","endLine":33,"endColumn":23},{"ruleId":"98","severity":1,"message":"119","line":34,"column":10,"nodeType":"100","messageId":"101","endLine":34,"endColumn":21},{"ruleId":"98","severity":1,"message":"120","line":35,"column":10,"nodeType":"100","messageId":"101","endLine":35,"endColumn":19},{"ruleId":"98","severity":1,"message":"121","line":36,"column":10,"nodeType":"100","messageId":"101","endLine":36,"endColumn":19},{"ruleId":"98","severity":1,"message":"122","line":39,"column":23,"nodeType":"100","messageId":"101","endLine":39,"endColumn":37},{"ruleId":"98","severity":1,"message":"123","line":40,"column":20,"nodeType":"100","messageId":"101","endLine":40,"endColumn":31},{"ruleId":"98","severity":1,"message":"124","line":41,"column":25,"nodeType":"100","messageId":"101","endLine":41,"endColumn":41},{"ruleId":"98","severity":1,"message":"125","line":42,"column":22,"nodeType":"100","messageId":"101","endLine":42,"endColumn":35},{"ruleId":"98","severity":1,"message":"126","line":43,"column":16,"nodeType":"100","messageId":"101","endLine":43,"endColumn":23},{"ruleId":"85","severity":1,"message":"127","line":57,"column":6,"nodeType":"87","endLine":57,"endColumn":80,"suggestions":"128"},{"ruleId":"98","severity":1,"message":"129","line":59,"column":10,"nodeType":"100","messageId":"101","endLine":59,"endColumn":19},{"ruleId":"98","severity":1,"message":"130","line":119,"column":11,"nodeType":"100","messageId":"101","endLine":119,"endColumn":23},{"ruleId":"98","severity":1,"message":"131","line":119,"column":25,"nodeType":"100","messageId":"101","endLine":119,"endColumn":42},{"ruleId":"98","severity":1,"message":"132","line":119,"column":44,"nodeType":"100","messageId":"101","endLine":119,"endColumn":60},{"ruleId":"98","severity":1,"message":"133","line":119,"column":62,"nodeType":"100","messageId":"101","endLine":119,"endColumn":76},{"ruleId":"98","severity":1,"message":"134","line":218,"column":9,"nodeType":"100","messageId":"101","endLine":218,"endColumn":23},{"ruleId":"98","severity":1,"message":"99","line":1,"column":17,"nodeType":"100","messageId":"101","endLine":1,"endColumn":26},{"ruleId":"98","severity":1,"message":"135","line":12,"column":3,"nodeType":"100","messageId":"101","endLine":12,"endColumn":25},{"ruleId":"98","severity":1,"message":"136","line":13,"column":3,"nodeType":"100","messageId":"101","endLine":13,"endColumn":25},{"ruleId":"98","severity":1,"message":"137","line":16,"column":3,"nodeType":"100","messageId":"101","endLine":16,"endColumn":22},{"ruleId":"98","severity":1,"message":"138","line":17,"column":3,"nodeType":"100","messageId":"101","endLine":17,"endColumn":16},{"ruleId":"98","severity":1,"message":"139","line":12,"column":26,"nodeType":"100","messageId":"101","endLine":12,"endColumn":40},{"ruleId":"140","severity":1,"message":"141","line":33,"column":28,"nodeType":"142","messageId":"143","endLine":33,"endColumn":30},{"ruleId":"85","severity":1,"message":"144","line":53,"column":6,"nodeType":"87","endLine":53,"endColumn":13,"suggestions":"145"},{"ruleId":"140","severity":1,"message":"141","line":56,"column":24,"nodeType":"142","messageId":"143","endLine":56,"endColumn":26},{"ruleId":"104","severity":1,"message":"146","line":126,"column":41,"nodeType":"94","messageId":"106","endLine":126,"endColumn":43},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.symbol' and 'stock'. Either include them or remove the dependency array.","ArrayExpression",["147"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'changeValue' and 'value1'. Either include them or remove the dependency array.",["148"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'MARKET_STACK_QUOTE_URL' is assigned a value but never used.","'assets' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'RadioButton' is defined but never used.","'TabView' is defined but never used.","'TabPanel' is defined but never used.","'CalendarSvg' is defined but never used.","'InputNumber' is defined but never used.","'Calendar' is defined but never used.","'Chart' is defined but never used.","'tabIndex' is assigned a value but never used.","'index' is assigned a value but never used.","'setSelectedCategory' is assigned a value but never used.","'totalAmount' is assigned a value but never used.","'totalInterest' is assigned a value but never used.","'totalSaving' is assigned a value but never used.","'totalRate' is assigned a value but never used.","'dataTable' is assigned a value but never used.","'setFirstSaving' is assigned a value but never used.","'setDuration' is assigned a value but never used.","'setMonthlySaving' is assigned a value but never used.","'setAnnualRate' is assigned a value but never used.","'setDate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'interestFromInterestSaving' and 'standartSaving'. Either include them or remove the dependency array.",["149"],"'basicData' is assigned a value but never used.","'basicOptions' is assigned a value but never used.","'horizontalOptions' is assigned a value but never used.","'multiAxisOptions' is assigned a value but never used.","'stackedOptions' is assigned a value but never used.","'currencyFormat' is assigned a value but never used.","'useRecoilStateLoadable' is defined but never used.","'useRecoilValueLoadable' is defined but never used.","'getConsumerLoanCalc' is defined but never used.","'LoanCalculate' is defined but never used.","'useRecoilState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'removeAllChildNodes' and 'startLotties'. Either include them or remove the dependency array.",["150"],"Expected '===' and instead saw '=='.",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [props.symbol, stock]",{"range":"159","text":"160"},"Update the dependencies array to be: [selectType, selectedCountry2, selectedCountry1, changeValue, value1]",{"range":"161","text":"162"},"Update the dependencies array to be: [firstSaving, duration, monthlySaving, annualRate, date, selectedCategory, standartSaving, interestFromInterestSaving]",{"range":"163","text":"164"},"Update the dependencies array to be: [props, removeAllChildNodes, startLotties]",{"range":"165","text":"166"},[1709,1711],"[props.symbol, stock]",[7961,8009],"[selectType, selectedCountry2, selectedCountry1, changeValue, value1]",[2214,2288],"[firstSaving, duration, monthlySaving, annualRate, date, selectedCategory, standartSaving, interestFromInterestSaving]",[1678,1685],"[props, removeAllChildNodes, startLotties]"]